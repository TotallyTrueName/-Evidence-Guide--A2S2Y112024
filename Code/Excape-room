#include <LiquidCrystal.h>

const int rs = 12;
const int en = 11;
const int d4 = 5;
const int d5 = 4;
const int d6 = 3;
const int d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const int EncoderPinA = 9;
const int EncoderPinB = 8;

const int Potentiometer1 = A5;
const int Potentiometer2 = A4;

int LED = 10;

volatile int EncoderPos = 0;
int lastEncoderState;


void setup() 
{
  Serial.begin(9600);
  digitalWrite(LED, LOW);

  lcd.begin(16, 2);
  lcd.print("Unsolved");

  pinMode(EncoderPinA, INPUT_PULLUP);
  pinMode(EncoderPinB, INPUT_PULLUP);
  pinMode(Potentiometer1, INPUT);
  pinMode(Potentiometer2, INPUT);
  pinMode(LED, OUTPUT);
  
  lastEncoderState = digitalRead(EncoderPinA); 
  attachInterrupt(digitalPinToInterrupt(EncoderPinA), updateEncoder, CHANGE);
}

void loop() 
{
 int Potentiometer1Value = analogRead(Potentiometer1);
 int Potentiometer2Value = analogRead(Potentiometer2);
 Serial.print(Potentiometer1Value);
 Serial.print(Potentiometer2Value);
 Serial.print(lastEncoderState);
 if (Potentiometer1Value >= 750 && Potentiometer1Value <= 1080 && EncoderPos >= 20 && Potentiometer2Value >= 750 && Potentiometer2Value <= 1080) 
  {
   digitalWrite(LED, HIGH);
   lcd.clear();
   lcd.setCursor(0, 0);
   lcd.print("clue"); // put the next clue for another puzzle here 
  }
}

void updateEncoder() 
{
 int state = digitalRead(EncoderPinA);
 if (state != lastEncoderState) 
  {
  if (digitalRead(EncoderPinB) != state)
    {
     EncoderPos++;
    } 
    else 
    {
     EncoderPos--;
    }
  }
 lastEncoderState = state;
}